// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokerScore.Data;

#nullable disable

namespace PokerScore.Data.Migrations
{
    [DbContext(typeof(PokerScoreDbContext))]
    [Migration("20231029061424_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("PokerScore.Core.Domain.Buyin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokerSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PokerSessionId");

                    b.ToTable("Buyins");
                });

            modelBuilder.Entity("PokerScore.Core.Domain.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PokerScore.Core.Domain.PokerSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PokerSessions");
                });

            modelBuilder.Entity("PokerScore.Core.Domain.Buyin", b =>
                {
                    b.HasOne("PokerScore.Core.Domain.Player", "Player")
                        .WithMany("Buyins")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokerScore.Core.Domain.PokerSession", "PokerSession")
                        .WithMany("Buyins")
                        .HasForeignKey("PokerSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("PokerSession");
                });

            modelBuilder.Entity("PokerScore.Core.Domain.Player", b =>
                {
                    b.Navigation("Buyins");
                });

            modelBuilder.Entity("PokerScore.Core.Domain.PokerSession", b =>
                {
                    b.Navigation("Buyins");
                });
#pragma warning restore 612, 618
        }
    }
}
